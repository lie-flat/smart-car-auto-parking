import numpy as np

SPACE_TOP = 90
MARKER_SIZE = 20
SPACE_BOTTOM = 105
BOTTOM_X_OFFSET = 130  # including marker
Z_TOP = 0
BOTTOM_Z_OFFSET = 2
BOTTOM_MARKER_Y_OFFSET = (SPACE_BOTTOM - SPACE_TOP) / 2

BOARD_DEFINITION = np.array([
    [
        # Marker Top Left
        [0, 0, Z_TOP],
        [0, MARKER_SIZE, Z_TOP],
        [MARKER_SIZE, MARKER_SIZE, Z_TOP],
        [MARKER_SIZE, 0, Z_TOP],
    ], [
        # Marker Top Right
        [0, MARKER_SIZE + SPACE_TOP, Z_TOP],
        [0, MARKER_SIZE + SPACE_TOP + MARKER_SIZE, Z_TOP],
        [MARKER_SIZE, MARKER_SIZE + SPACE_TOP + MARKER_SIZE, Z_TOP],
        [MARKER_SIZE, MARKER_SIZE + SPACE_TOP, Z_TOP],
    ], [
        # Marker Bottom Right
        [BOTTOM_X_OFFSET, BOTTOM_MARKER_Y_OFFSET + \
            MARKER_SIZE + SPACE_TOP, Z_TOP + BOTTOM_Z_OFFSET],
        [BOTTOM_X_OFFSET, BOTTOM_MARKER_Y_OFFSET + \
            MARKER_SIZE + SPACE_TOP + MARKER_SIZE, Z_TOP + BOTTOM_Z_OFFSET],
        [BOTTOM_X_OFFSET + MARKER_SIZE,  BOTTOM_MARKER_Y_OFFSET + \
            MARKER_SIZE + SPACE_TOP + MARKER_SIZE, Z_TOP + BOTTOM_Z_OFFSET],
        [BOTTOM_X_OFFSET + MARKER_SIZE, BOTTOM_MARKER_Y_OFFSET + \
            MARKER_SIZE + SPACE_TOP, Z_TOP + BOTTOM_Z_OFFSET],
    ], [
        # Marker Bottom Left
        [BOTTOM_X_OFFSET, -BOTTOM_MARKER_Y_OFFSET, Z_TOP + BOTTOM_Z_OFFSET],
        [BOTTOM_X_OFFSET, -BOTTOM_MARKER_Y_OFFSET, Z_TOP + BOTTOM_Z_OFFSET],
        [BOTTOM_X_OFFSET + MARKER_SIZE, - BOTTOM_MARKER_Y_OFFSET + \
            MARKER_SIZE, Z_TOP + BOTTOM_Z_OFFSET],
        [BOTTOM_X_OFFSET + MARKER_SIZE, - BOTTOM_MARKER_Y_OFFSET + \
            MARKER_SIZE, Z_TOP + BOTTOM_Z_OFFSET],
    ]
], dtype="float32")
